call plug#begin('~/.vim/plugged')

" VCS
Plug 'tpope/vim-fugitive'

" System
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-unimpaired'
Plug 'w0rp/ale'
Plug 'ervandew/supertab'
Plug 'sickill/vim-pasta'
Plug 'christoomey/vim-tmux-navigator'
Plug 'tpope/vim-eunuch'
Plug 'SirVer/ultisnips'
Plug 'Arkham/vim-quickfixdo'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'haya14busa/incsearch.vim'
Plug 'ludovicchabant/vim-gutentags'
Plug 'christoomey/vim-sort-motion'
" Plug 'roxma/python-support.nvim'
" Plug 'roxma/nvim-completion-manager'
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

"Syntaxes
Plug 'othree/html5.vim', {'for': ['html']}
Plug 'vim-scripts/HTML-AutoCloseTag', {'for': ['html', 'javascript.jsx']}
Plug 'kchmck/vim-coffee-script', {'for': ['coffee']}
Plug 'toadums/vim-cjsx', {'for': ['coffee']}
Plug 'pangloss/vim-javascript', {'for': ['javascript']}
Plug 'mxw/vim-jsx', {'for': ['javascript']}
Plug 'hail2u/vim-css3-syntax', {'for': ['scss', 'sass', 'haml']}
Plug 'digitaltoad/vim-jade', {'for': ['jade']}
Plug 'beyondmarc/hlsl.vim'

" Ruby
Plug 'vim-ruby/vim-ruby', {'for': 'ruby'}
Plug 'tpope/vim-rails', {'for': 'ruby'}
Plug 'tpope/vim-endwise', {'for': 'ruby'}

" Themes
Plug 'altercation/vim-colors-solarized'
Plug 'w0ng/vim-hybrid'
Plug 'tomasr/molokai'

call plug#end()

" Change leader
nnoremap <SPACE> <Nop>
let mapleader = " "
let g:mapleader = " "

" Wildmenu
set wildmenu
set wildmode=list:longest
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
set wildignore+=.hg,.git,.svn                    " Version control
set wildignore+=*.aux,*.out,*.toc                " LaTeX intermediate files
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest " compiled object files
set wildignore+=*.spl,*.sw?,*.DS_Store,*.luac,*.pyc,**.class
set wildignore+=bower_components,vendor/bundle,public
set wildignore+=node_modules
set wildcharm=<Tab>

let g:netrw_liststyle= 1

" Resize splits when the window is resized
au VimResized * exe "normal! \<c-w>="

" Basics
set relativenumber                      " always show line numbers
set number                              " Show the currently line number
set hidden                              " Allow un-saved buffers in background
set clipboard=unnamed                   " Share system clipboard.
set backspace=indent,eol,start          " Make backspace behave normally.
set backupskip=/tmp/*,/private/tmp/*
set backupdir=/tmp/
set directory=/tmp/                     " swap files
set ffs=unix,dos,mac                    " Default file types
set nowrap                              " don't wrap lines
set showmatch                           " set show matching parenthesis
set hlsearch                            " highlight search terms
set incsearch                           " show search matches as you type
set history=1000                        " remember more commands and search history
set undolevels=1000                     " use many muchos levels of undo
set visualbell                          " don't beep
set noerrorbells                        " don't beep
set cc=100
set re=1

" Default background & theme
syntax enable
set background=dark
" colorscheme
color hybrid
" color molokai

" set background=light
" color solarized

" Default Tabs & spaces
set tabstop=2     " a tab is two spaces
set shiftwidth=2  " number of spaces to use for autoindenting
set softtabstop=2
set expandtab
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'
set smarttab      " insert tabs on the start of a line according to
                  "    shiftwidth, not tabstop
set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting
set cursorline    " highlight current line

" Hide scrollbars
set guioptions=Ace

set statusline=\ %n
set statusline+=\ %f
set statusline+=\ %m
set statusline+=%=
set statusline+=\ %y

" Plugin Configurations
"""""""""""""""""""""""
filetype indent plugin on
au BufNewFile,BufRead *.cjsx set filetype=coffee
au BufNewFile,BufRead *.frag set filetype=hlsl

let g:rehash256 = 1

let g:fzf_buffers_jump = 1

" Trim trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

let g:ale_javascript_eslint_use_global = 1
let g:ale_linters = {
\   'javascript': ['eslint'],
\}

let g:jsx_ext_required = 0

" vim pasta
let g:pasta_disabled_filetypes = ['python', 'coffee', 'yaml']

" Snippets
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsSnippetsDir="~/.vim/snippets/"

let g:gutentags_ctags_executable_ruby = 'jsctags'

" Gross hack to make c-h work to move left a split
if has('nvim')
  nmap <bs> <c-w>h
endif

if has('gui_running')
  set guifont=Source_Code_Pro:h13
endif

let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1

" let g:python_host_prog = '~/venv/myenv/bin/python3'

" Supertab go backwards!
" let g:SuperTabDefaultCompletionType = "<c-n>"

let g:incsearch#auto_nohlsearch = 1

map / <Plug>(incsearch-forward)
map g/ <Plug>(incsearch-stay)

" Dont indent chained functions
let g:javascript_opfirst = 1

" deoplete
let g:deoplete#enable_at_startup = 1
call deoplete#custom#set('ultisnips', 'matchers', ['matcher_fuzzy'])
let deoplete#tag#cache_limit_size = 5000000
let g:deoplete#enable_at_startup = 1
let g:deoplete#sources = {}
let g:deoplete#sources._ = ['buffer', 'tag', 'file', 'member', 'ultisnips']
" Key Bindings
"""""""""""""""""""""""

" keybindings for easier switching between splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"make < > shifts keep selection
vnoremap < <gv
vnoremap > >gv

" FZF bindings
nnoremap \ :Ag<Space>
nnoremap <leader>o :execute 'Ag ' . expand("<cword>")<CR>

nnoremap <leader>b  :Buffers<CR>
nnoremap <leader>f :Files <CR>
" Search tags for word under cursor
nnoremap <leader>t :execute 'Tags ' . expand("<cword>")<CR>

" Open files
nnoremap <leader>d :vsp %:h/<Tab>
nnoremap <leader>e :e %:h/<Tab>

nnoremap <leader><space> :noh<cr>
vnoremap <leader><space> <esc>:noh<cr>

" Git stuff
nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gd :Gdiff<CR>
nnoremap <leader>gb :Gblame<CR>

nnoremap <leader>c  :ccl<CR>:lclose<CR>

nnoremap - :Ex<cr>

nnoremap <leader>s  :w<CR>

nnoremap <leader>r :QuickFixDo :%s//gce<left><left><left><left>

cnoremap jk <ESC>
inoremap jk <ESC>

" Open vimrc in a split
nnoremap <leader>v :vsp ~/.vimrc<CR>

" stupid kinesis
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

